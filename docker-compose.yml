services:
  postgres-app:
    image: postgres:16-alpine
    container_name: postgres-sfbikeshare-01
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB_APP}
      - POSTGRES_USER=${POSTGRES_USER_APP}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_APP}
    volumes:
      - ./tests:/app/tests
      - ../data:/app/data
      #- Descomentar caso queira persistir os dados do servidor
      # - ./pg_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_APP:-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER_APP}"]
      interval: 1m00s
      timeout: 20s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  python-app:
    image: python:3.12-slim
    container_name: python-sfbikeshare-app
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./sql:/app/sql
      - ./requirements.txt:/app/requirements.txt
    env_file:
      - .env
    environment:
      - POSTGRES_HOST_APP=postgres-app
      - POSTGRES_PORT_APP=5432
    depends_on:
      - postgres-app
    command: >
      bash -c "
        echo 'Instalando dependencias...' &&
        pip install -r /app/requirements.txt &&
        echo 'Inicializando banco de dados...' &&
        python src/init_database.py &&
        echo 'Inicializacao e carga de dados concluida.'
        tail -f /dev/null
      "
    restart: no
